[{"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/App.tsx":"1","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Footer.tsx":"2","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Home.tsx":"3","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Signup.tsx":"4","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Current.tsx":"5","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/components/SnackSquare.tsx":"6"},{"size":968,"mtime":1610127662595,"results":"7","hashOfConfig":"8"},{"size":1375,"mtime":1610130865767,"results":"9","hashOfConfig":"8"},{"size":1929,"mtime":1610127706684,"results":"10","hashOfConfig":"8"},{"size":5578,"mtime":1610127477677,"results":"11","hashOfConfig":"8"},{"size":1087,"mtime":1610131588341,"results":"12","hashOfConfig":"8"},{"size":633,"mtime":1610133440883,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"6byxyk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/App.tsx",["27","28"],"import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Footer from './pages/Footer';\nimport Logo from './pages/Logo';\nimport Current from './pages/Current';\nimport Voting from './pages/Voting';\nimport Signup from './pages/Signup';\nimport Home from './pages/Home';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"site\">\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/current\">\n            <Current />\n          </Route>\n          <Route path=\"/voting\">\n            <Voting />\n          </Route>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Footer.tsx",["29"],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Home.tsx",["30"],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Signup.tsx",[],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Current.tsx",[],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/components/SnackSquare.tsx",["31"],{"ruleId":"32","severity":1,"message":"33","line":6,"column":3,"nodeType":"34","messageId":"35","endLine":6,"endColumn":7},{"ruleId":"32","severity":1,"message":"36","line":9,"column":8,"nodeType":"34","messageId":"35","endLine":9,"endColumn":12},{"ruleId":"37","severity":1,"message":"38","line":15,"column":23,"nodeType":"39","endLine":15,"endColumn":47},{"ruleId":"37","severity":1,"message":"38","line":11,"column":15,"nodeType":"39","endLine":11,"endColumn":35},{"ruleId":"40","severity":1,"message":"41","line":17,"column":13,"nodeType":"39","endLine":17,"endColumn":41},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Logo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]
[{"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/App.tsx":"1","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Footer.tsx":"2","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Home.tsx":"3","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Signup.tsx":"4","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Current.tsx":"5","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/components/SnackSquare.tsx":"6","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Voting.tsx":"7","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/components/VotingTable.tsx":"8","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/components/SnackRow.tsx":"9","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/components/SelectionTable.tsx":"10","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/util/requests.ts":"11"},{"size":968,"mtime":1610127662595,"results":"12","hashOfConfig":"13"},{"size":1375,"mtime":1610130865767,"results":"14","hashOfConfig":"13"},{"size":1929,"mtime":1610127706684,"results":"15","hashOfConfig":"13"},{"size":5578,"mtime":1610127477677,"results":"16","hashOfConfig":"13"},{"size":1935,"mtime":1610303844704,"results":"17","hashOfConfig":"13"},{"size":837,"mtime":1610158638324,"results":"18","hashOfConfig":"13"},{"size":2301,"mtime":1610140686989,"results":"19","hashOfConfig":"13"},{"size":1060,"mtime":1610141188979,"results":"20","hashOfConfig":"13"},{"size":879,"mtime":1610141196904,"results":"21","hashOfConfig":"13"},{"size":689,"mtime":1610141212236,"results":"22","hashOfConfig":"13"},{"size":711,"mtime":1610157740906,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"6byxyk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/App.tsx",["47","48"],"import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Footer from './pages/Footer';\nimport Logo from './pages/Logo';\nimport Current from './pages/Current';\nimport Voting from './pages/Voting';\nimport Signup from './pages/Signup';\nimport Home from './pages/Home';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"site\">\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/current\">\n            <Current />\n          </Route>\n          <Route path=\"/voting\">\n            <Voting />\n          </Route>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Footer.tsx",["49"],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Home.tsx",["50"],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Signup.tsx",[],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Current.tsx",["51"],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/components/SnackSquare.tsx",[],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/pages/Voting.tsx",["52"],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/components/VotingTable.tsx",[],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/components/SnackRow.tsx",["53"],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/components/SelectionTable.tsx",[],"/Users/Will/Documents/Coding/nerderyTest/snafoo/src/util/requests.ts",[],{"ruleId":"54","severity":1,"message":"55","line":6,"column":3,"nodeType":"56","messageId":"57","endLine":6,"endColumn":7},{"ruleId":"54","severity":1,"message":"58","line":9,"column":8,"nodeType":"56","messageId":"57","endLine":9,"endColumn":12},{"ruleId":"59","severity":1,"message":"60","line":15,"column":23,"nodeType":"61","endLine":15,"endColumn":47},{"ruleId":"59","severity":1,"message":"60","line":11,"column":15,"nodeType":"61","endLine":11,"endColumn":35},{"ruleId":null,"fatal":true,"severity":2,"message":"62","line":54,"column":22},{"ruleId":"54","severity":1,"message":"63","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"65","line":24,"column":58,"nodeType":"61","endLine":24,"endColumn":76},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Logo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Parsing error: Unexpected token. Did you mean `{'}'}` or `&rbrace;`?","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]